function primary_request_process(int n_pos, int q) {
  Deliver_Request;
  Send_Prepare;
  do {
    Deliver_Prepareok;
    n_pos = n_pos + 1;
  } until (n_pos == q-1);
  Send_Reply;
}

function normal_primary() {
  multiple {
    either {
      Deliver_Request;
      optional { 
          either {
            Send_Prepare;
          } or {
            Send_Reply;
          }
      }
    } or {
      Deliver_Prepareok;
      optional { Send_Reply; }
    } or {
      Send_Commit;
    } or {
      Deliver_Recovery;
      Send_Recoveryresponse;
    }
  }
}

function normal_backup() {
  multiple {
    either {
      Deliver_Prepare;
      optional { Send_Prepareok; }
    } or {
      Deliver_Commit;
    } or {
      Deliver_Recovery;
      Send_Recoveryresponse;
    }
  }
}

function viewchange(int n_svcs, int n_dvcs, int q) {
  Send_Startviewchange;
  do {
    either {
      Deliver_Startviewchange;
      n_svcs = n_svcs + 1;
    } or {
      Deliver_Doviewchange;
      n_dvcs = n_dvcs + 1;
    } or {
      Send_Startviewchange;
      n_svcs = 0;
    } or (n_svcs == q-1) {
      Send_Doviewchange;
    }
  } until (n_dvcs == q);
  Send_Startview;
  optional {
    Send_Reply;
  }
}

function recovery(int n_rrs, bool prr, int q) {
  Send_Recovery;
  do {
    Deliver_Recoveryresponse;
    n_rrs = n_rrs + 1;
    optional {
      Deliver_Primaryrecoveryresponse;
      prr = true;
    }
  } until (n_rrs >= q && prr);
}

automaton vr(int n_pos, int n_svcs, int n_dvcs, int n_rrs, bool prr, int q) {
  either {
    during {
      either {
        normal_primary();
      } or {
        normal_backup();
      } or {
        viewchange(n_svcs, n_dvcs, q);
      } or {
        recovery(n_rrs, prr, q);
      }
    } handle {
      Deliver_Startview;
      optional { Send_Prepareok; }
    }
  } or {
    primary_request_process(n_pos, q);
  }
}
